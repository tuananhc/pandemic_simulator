{"version":3,"sources":["circle.png","App.js","reportWebVitals.js","index.js"],"names":["RangeSlider","useState","population","setPopulation","infectedPercent","setInfectedPercent","contagiousRadius","setContagiousRadius","susceptibleRate","setSusceptibleRate","populationList","setPopulationList","startDisabled","setStartDisabled","activeCases","setActiveCases","rFactor","status","setStatus","newStatus","setNewStatus","chartData","setChartData","chartLabel","setChartLabel","useEffect","pop","stats","rec","i","push","Math","floor","cases","anime","remove","interval","setInterval","curTime","slice","coor","rect","document","getElementById","getBoundingClientRect","top","left","index","setTimeout","newStats","targets","concat","background","duration","easing","length","j","sqrt","pow","random","el","classList","add","stats2","getElementsByClassName","toString","scale","clearInterval","data","labels","datasets","label","fill","target","above","backgroundColor","borderColor","lineChart","options","tension","animation","scales","xAxes","ticks","display","yAxes","beginAtZero","start","translateX","translateY","complete","value","opacity","loop","style","flexDirection","padding","justifyContent","alignItems","marginBottom","fontSize","class","border","width","height","flexWrap","map","id","margin","position","src","Ring","borderRadius","renderInfected","renderHealthy","marginTop","Typography","gutterBottom","Slider","onChange","event","valueLabelDisplay","aria-labelledby","min","max","disabled","marginLeft","Input","onBlur","inputProps","step","type","Button","variant","color","onClick","temporaryValue","randomIndex","currentIndex","shuffle","defaults","plugins","tooltip","enabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ca81879d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/circle.0772d047.png\";","import Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport React, { useState, useEffect } from 'react';\nimport anime from 'animejs/lib/anime.es.js';\nimport './App.css';\nimport Ring from './circle.png';\nimport { Line } from 'react-chartjs-2';\n\nimport { defaults } from 'react-chartjs-2';\n\n// Disable animating charts by default.\ndefaults.plugins.tooltip.enabled = true\n\nexport default function RangeSlider() {\n  const [population, setPopulation] = useState(52);\n  const [infectedPercent, setInfectedPercent] = useState(0)\n  const [contagiousRadius, setContagiousRadius] = useState(2)\n  const [susceptibleRate, setSusceptibleRate] = useState(20)\n  const [populationList, setPopulationList] = useState([])\n  const [startDisabled, setStartDisabled] = useState(false)\n  const [activeCases, setActiveCases] = useState(0)\n  const [rFactor, setRFactor] = useState(0)\n  const [status, setStatus] = useState([])\n  const [newStatus, setNewStatus] = useState([])\n  const [chartData, setChartData] = useState([])\n  const [chartLabel, setChartLabel] = useState([0])\n\n  function renderHealthy(id) {\n    return (\n      <div class='population' id={id} style={{ margin: 10, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n        <img id={'ring'.concat(id)} src={Ring} style={{ width: 9.5, height: 9.5, position: 'absolute' }} />\n        <div id={'healthy'.concat(id)} style={{ width: 10, height: 10, borderRadius: '50%', backgroundColor: '#00FF00' }} />\n      </div>\n    )\n  }\n\n  function renderInfected(id) {\n    return (\n      <div class='population' id={id} style={{ margin: 10, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n        <img class='ring' src={Ring} style={{ width: 9.5, height: 9.5, position: 'absolute' }} />\n        <div id={'infected'.concat(id)} style={{ width: 10, height: 10, borderRadius: '50%', backgroundColor: '#FF0000' }} />\n      </div>\n    )\n  }\n\n  useEffect(() => {\n    var pop = []\n    var stats = []\n    var rec = []\n    for (var i = 0; i < population; i++) {\n      pop.push(i)\n      if (i < Math.floor(population * infectedPercent / 100)) {\n        stats.push(false)\n        rec.push(1)\n      } else {\n        stats.push(true)\n        rec.push(0)\n      }\n    }\n    setStatus(stats)\n    setPopulationList(pop)\n    setNewStatus(rec)\n  }, [population, infectedPercent])\n\n  useEffect(() => {\n    var cases = 0\n    for (var i = 0; i < population; i++) {\n      if (!status[i]) {\n        cases++\n      }\n    }\n    setActiveCases(cases)\n    if (cases === population) {\n      anime.remove('.population')\n      setStartDisabled(false)\n    }\n  }, [status])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      var curTime = chartLabel.slice(-1)[0]\n      if (startDisabled) {\n        setChartLabel([...chartLabel, curTime++])\n        setChartData([...chartData, activeCases])\n        var stats = [...status]\n        var coor = []\n        for (var i = 0; i < population; i++) {\n          var element = document.getElementById(i)\n          var rect = element.getBoundingClientRect();\n          coor.push([rect.top, rect.left])\n          if (newStatus[i] === 1) {\n            var index = i\n            setTimeout(() => {\n              var newStats = [...newStatus]\n              newStats[index] = 2\n              setNewStatus(newStats)\n              anime({\n                targets: document.getElementById('infected'.concat(index)),\n                background: '#808080',\n                duration: 1000,\n                easing: 'linear'\n              });\n            }, 1000);\n          }\n        }\n        if (coor.length > 0) {\n          for (var i = 0; i < population; i++) {\n            for (var j = 0; j < population && j != i; j++) {\n              if (status[i] != status[j]) {\n                var dist = Math.sqrt(Math.pow(coor[i][0] - coor[j][0], 2) + Math.pow(coor[i][1] - coor[j][1], 2))\n                if (dist < 35) {\n                  var rand = Math.floor(Math.random() * 100)\n                  if (rand < susceptibleRate) {\n                    if (!status[i]) {\n                      var el = document.getElementById('healthy'.concat(j))\n                      document.getElementById('ring'.concat(j)).classList.add('ring')\n                      document.getElementById('ring'.concat(j)).classList.add(j)\n                      anime({\n                        targets: el,\n                        background: '#FF0000',\n                        duration: 1000,\n                        easing: 'linear',\n                      });\n\n                      setTimeout(() => {\n                        anime({\n                          targets: el,\n                          background: '#808080',\n                          duration: 1000,\n                          easing: 'linear'\n                        })\n                        anime({\n                          targets: document.getElementsByClassName(j.toString()),\n                          scale: 0.01\n                        })\n                        var stats2 = [...newStatus]\n                        stats2[j] = 2\n                        setNewStatus(stats2)\n                      }, 3000)\n                      stats[j] = false\n                    } else {\n                      var el = document.getElementById('healthy'.concat(i))\n                      document.getElementById('ring'.concat(i)).classList.add('ring')\n                      document.getElementById('ring'.concat(i)).classList.add(i)\n                      anime({\n                        targets: el,\n                        background: '#FF0000',\n                        duration: 1000,\n                        easing: 'linear',\n                      })\n                      stats[i] = false\n                      setTimeout(() => {\n                        anime({\n                          targets: el,\n                          background: '#808080',\n                          duration: 1000,\n                          easing: 'linear'\n                        })\n                        var stats2 = [...newStatus]\n                        stats2[i] = 2\n                        setNewStatus(stats2)\n                      }, 3000)\n                    }\n                  }\n                }\n              }\n            }\n          }\n          setStatus(stats)\n        }\n      }\n    }, 500)\n    return () => clearInterval(interval)\n  }, [startDisabled, status])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      var curTime = chartLabel.slice(-1)[0]\n      if (startDisabled) {\n\n      }\n    }, 500)\n    return () => clearInterval(interval)\n  }, [startDisabled])\n\n  function handleBlur() {\n    if (population < 0) {\n      setPopulation(0);\n    } else if (population > 100) {\n      setPopulation(100);\n    }\n  }\n\n  const data = {\n    labels: chartLabel,\n    datasets: [\n      {\n        label: '# of infected cases',\n        data: chartData,\n        fill: {\n          target: 'origin',\n          above: 'rgb(255, 100, 132)',   // Area will be red above the origin\n        },\n        backgroundColor: '#FF0000',\n        borderColor: 'rgba(255, 99, 132, 0.2)',\n      },\n    ],\n  };\n\n  const options = {\n    tension: 0.3,\n    animation: false,\n    scales: {\n      xAxes: {\n        ticks: {\n          display: false\n        },\n      },\n      yAxes: {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    }\n  };\n\n  const lineChart = (\n    <Line data={data} options={options} />\n  );\n\n  function shuffle() {\n    var currentIndex = population, temporaryValue, randomIndex;\n    var pop = [...populationList]\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = pop[currentIndex];\n      pop[currentIndex] = pop[randomIndex];\n      pop[randomIndex] = temporaryValue;\n    }\n    setPopulationList(pop)\n  }\n\n  function start() {\n    anime({\n      targets: '.population',\n      translateX: function () {\n        return anime.random(-75, 75);\n      },\n      translateY: function () {\n        return anime.random(-75, 75);\n      },\n      easing: 'linear',\n      complete: start\n    });\n    anime({\n      targets: '.ring',\n      scale: {\n        value: [1, 4],\n        duration: 5500\n      },\n      opacity: {\n        value: [1, 0],\n        duration: 1000,\n        easing: 'linear',\n      },\n      loop: true\n    })\n  }\n\n  return (\n    <div>\n      <div style={{ display: 'flex', flexDirection: 'row', padding: 40, justifyContent: 'flex-start', alignItems: 'flex-start' }}>\n        <div style={{ display: 'flex', flexDirection: 'column', }}>\n          <div style={{ display: 'flex', justifyContent: 'flex-start', marginBottom: 10 }}>\n            <text style={{ fontSize: 20 }}># Infected cases: {activeCases}</text>\n          </div>\n          <div class='border' style={{ border: '3px solid black', width: 390, height: 390, flexWrap: 'wrap', flexDirection: 'row', display: 'flex', justifyContent: 'flex-start', alignItems: 'center', padding: 80 }}>\n            {populationList.map((id) => {\n              if (id < Math.floor(population * infectedPercent / 100)) {\n                return (renderInfected(id))\n              } else {\n                return (renderHealthy(id))\n              }\n            })}\n          </div>\n          <text style={{ marginTop: 10, fontSize: 20 }}>R={rFactor}</text>\n        </div>\n        <div style={{ display: 'flex', flexDirection: 'column', margin: '10px 0 0 100px' }}>\n          <Typography id=\"range-slider\" gutterBottom>\n            Population\n          </Typography>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <div style={{ width: 400 }}>\n              <Slider\n                value={population}\n                onChange={(event, value) => setPopulation(value)}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                min={0}\n                max={169}\n                disabled={startDisabled}\n              />\n            </div>\n            <div style={{ marginLeft: 10 }}>\n              <Input\n                value={population}\n                margin=\"dense\"\n                onChange={(event) => (event.target.value) ? setPopulation(event.target.value) : () => { }}\n                onBlur={handleBlur}\n                inputProps={{\n                  step: 1,\n                  min: 0,\n                  max: 169,\n                  type: 'number',\n                  'aria-labelledby': 'input-slider',\n                }}\n              />\n            </div>\n          </div>\n          <Typography id=\"range-slider\" gutterBottom>\n            Infected proportion (%)\n          </Typography>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <div style={{ width: 400 }}>\n              <Slider\n                value={infectedPercent}\n                onChange={(event, value) => setInfectedPercent(value)}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                min={0}\n                max={100}\n                disabled={startDisabled}\n              />\n            </div>\n            <div style={{ marginLeft: 10 }}>\n              <Input\n                value={infectedPercent}\n                margin=\"dense\"\n                onChange={(event) => (event.target.value) ? setInfectedPercent(event.target.value) : () => { }}\n                inputProps={{\n                  step: 1,\n                  min: 0,\n                  max: 100,\n                  type: 'number',\n                  'aria-labelledby': 'input-slider',\n                }}\n              />\n            </div>\n          </div>\n          <Typography id=\"range-slider\" gutterBottom>\n            Contagious Radius (meters)\n          </Typography>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <div style={{ width: 400 }}>\n              <Slider\n                value={contagiousRadius}\n                onChange={(event, value) => setContagiousRadius(value)}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                min={0}\n                step={0.2}\n                max={5}\n                disabled={startDisabled}\n              />\n            </div>\n            <div style={{ marginLeft: 10 }}>\n              <Input\n                value={contagiousRadius}\n                margin=\"dense\"\n                onChange={(event) => (event.target.value) ? setContagiousRadius(event.target.value) : () => { }}\n                inputProps={{\n                  step: 0.1,\n                  min: 0,\n                  max: 5,\n                  type: 'number',\n                  'aria-labelledby': 'input-slider',\n                }}\n              />\n            </div>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: 400, height: 75 }}>\n            <div style={{ height: 10, width: 10, borderRadius: 10, backgroundColor: 'red' }} />\n            <img src={Ring} style={{ height: contagiousRadius * 20, width: contagiousRadius * 20, position: 'absolute' }}></img>\n          </div>\n          <Typography id=\"range-slider\" gutterBottom>\n            Susceptible Rate (%)\n          </Typography>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <div style={{ width: 400 }}>\n              <Slider\n                value={susceptibleRate}\n                onChange={(event, value) => setSusceptibleRate(value)}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                min={0}\n                max={100}\n                disabled={startDisabled}\n              />\n            </div>\n            <div style={{ marginLeft: 10 }}>\n              <Input\n                value={susceptibleRate}\n                margin=\"dense\"\n                onChange={(event) => (event.target.value) ? setSusceptibleRate(event.target.value) : () => { }}\n                inputProps={{\n                  step: 1,\n                  min: 0,\n                  max: 100,\n                  type: 'number',\n                  'aria-labelledby': 'input-slider',\n                }}\n              />\n            </div>\n          </div>\n          Options:\n          <div style={{ display: 'flex', flexDirection: 'row', }}>\n            <div style={{ margin: 20 }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ width: 100 }}\n                onClick={() => shuffle()}\n                disabled={startDisabled}\n              >\n                Shuffle\n              </Button>\n            </div>\n            <div style={{ margin: 20 }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ width: 100 }}\n                onClick={() => {\n                  setStartDisabled(true)\n                  start()\n                }}\n                disabled={startDisabled}\n              >\n                Start\n              </Button>\n            </div>\n            <div style={{ margin: 20 }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ width: 100 }}\n                onClick={() => {\n                  anime.remove('.population');\n                  setPopulation(0)\n                  setTimeout(() => {\n                    setPopulation(52)\n                  }, 100)\n                  setChartData([])\n                  setChartLabel([0])\n                }}\n              >\n                Reset\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div style={{ padding: 40, width: 800 }}>\n        {lineChart}\n      </div>\n    </div>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}