{"version":3,"sources":["circle.png","App.js","reportWebVitals.js","index.js"],"names":["RangeSlider","useState","population","setPopulation","infectedPercent","setInfectedPercent","contagiousRadius","setContagiousRadius","susceptibleRate","setSusceptibleRate","populationList","setPopulationList","shuffleDisabled","setShuffleDisabled","setGroupDisabled","startDisabled","setStartDisabled","setResetDisabled","pauseDisabled","setPauseDisabled","activeCases","setActiveCases","rFactor","status","setStatus","start","anime","targets","translateX","random","translateY","easing","complete","scale","value","duration","opacity","loop","useEffect","pop","stats","i","push","Math","floor","cases","interval","setInterval","coor","rect","document","getElementById","getBoundingClientRect","top","left","length","j","sqrt","pow","el","concat","classList","add","background","stat","clearInterval","style","display","flex","flexDirection","padding","justifyContent","marginBottom","fontSize","class","border","width","height","flexWrap","alignItems","map","id","margin","position","src","Ring","borderRadius","backgroundColor","renderInfected","renderHealthy","marginTop","marginLeft","Typography","gutterBottom","Slider","onChange","event","valueLabelDisplay","aria-labelledby","min","max","disabled","Input","target","onBlur","inputProps","step","type","Button","variant","color","onClick","temporaryValue","randomIndex","currentIndex","shuffle","remove","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ea4ee0d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/circle.0772d047.png\";","import Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Button from '@material-ui/core/Button'\nimport Input from '@material-ui/core/Input'\nimport React, { useState, useEffect } from 'react'\nimport anime from 'animejs/lib/anime.es.js';\nimport './App.css'\nimport Ring from './circle.png'\n\nexport default function RangeSlider() {\n  const [population, setPopulation] = useState(50);\n  const [infectedPercent, setInfectedPercent] = useState(0)\n  const [contagiousRadius, setContagiousRadius] = useState(0)\n  const [susceptibleRate, setSusceptibleRate] = useState(20)\n  const [populationList, setPopulationList] = useState([])\n  const [shuffleDisabled, setShuffleDisabled] = useState(false)\n  const [groupDisabled, setGroupDisabled] = useState(false)\n  const [startDisabled, setStartDisabled] = useState(false)\n  const [resetDisabled, setResetDisabled] = useState(true)\n  const [pauseDisabled, setPauseDisabled] = useState(true)\n  const [activeCases, setActiveCases] = useState(0)\n  const [rFactor, setRFactor] = useState(0)\n  const [status, setStatus] = useState([])\n\n  function renderHealthy(id) {\n    return (\n      <div class='population' id={id} style={{ margin: 10, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n        <img id={'ring'.concat(id)} src={Ring} style={{ width: 9.5, height: 9.5, position: 'absolute' }} />\n        <div id={'healthy'.concat(id)} style={{ width: 10, height: 10, borderRadius: '50%', backgroundColor: '#00FF00' }} />\n      </div>\n    )\n  }\n\n  function renderInfected(id) {\n    return (\n      <div class='population' id={id} style={{ margin: 10, display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n        <img class='ring' src={Ring} style={{ width: 9.5, height: 9.5, position: 'absolute' }} />\n        <div class='infected' style={{ width: 10, height: 10, borderRadius: '50%', backgroundColor: '#FF0000' }} />\n      </div>\n    )\n  }\n\n  useEffect(() => {\n    var pop = []\n    var stats = []\n    for (var i = 0; i < population; i++) {\n      pop.push(i)\n      if (i < Math.floor(population * infectedPercent / 100)) {\n        stats.push(false)\n      } else {\n        stats.push(true)\n      }\n    }\n    setStatus(stats)\n    setPopulationList(pop)\n  }, [population, infectedPercent])\n\n  useEffect(() => {\n    var cases = 0\n    for (var i = 0; i < population; i++) {\n      if (!status[i]) {\n        cases++\n      }\n    }\n    setActiveCases(cases)\n  }, [status])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (startDisabled) {\n        var coor = []\n        for (var i = 0; i < population; i++) {\n          var element = document.getElementById(i)\n          var rect = element.getBoundingClientRect();\n          coor.push([rect.top, rect.left])\n        }\n        if (coor.length > 0) {\n          for (var i = 0; i < population; i++) {\n            for (var j = 0; j < population && j != i; j++) {\n              if (status[i] != status[j]) {\n                var dist = Math.sqrt(Math.pow(coor[i][0] - coor[j][0], 2) + Math.pow(coor[i][1] - coor[j][1], 2))\n                if (dist < 35) {\n                  if (!status[i]) {\n                    var el = document.getElementById('healthy'.concat(j))\n                    document.getElementById('ring'.concat(j)).classList.add('ring')\n                    anime({\n                      targets: el,\n                      background: '#FF0000',\n                      duration: 1000,\n                      easing: 'easeInOutQuad',\n                    });\n                    var stat = [...status]\n                    stat[j] = false\n                    setStatus(stat)\n                  } else {\n                    var el = document.getElementById('healthy'.concat(i))\n                    document.getElementById('ring'.concat(i)).classList.add('ring')\n                    anime({\n                      targets: el,\n                      background: '#FF0000',\n                      duration: 1000,\n                      easing: 'easeInOutQuad',\n                    })\n                    var stat = [...status]\n                    stat[i] = false\n                    setStatus(stat)\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }, 500)\n    return () => clearInterval(interval)\n  }, [startDisabled, status])\n\n  function handleBlur() {\n    if (population < 0) {\n      setPopulation(0);\n    } else if (population > 100) {\n      setPopulation(100);\n    }\n  }\n\n  function shuffle() {\n    var currentIndex = population, temporaryValue, randomIndex;\n    var pop = [...populationList]\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = pop[currentIndex];\n      pop[currentIndex] = pop[randomIndex];\n      pop[randomIndex] = temporaryValue;\n    }\n    setPopulationList(pop)\n  }\n\n  function start() {\n    anime({\n      targets: '.population',\n      translateX: function () {\n        return anime.random(-75, 75);\n      },\n      translateY: function () {\n        return anime.random(-75, 75);\n      },\n      easing: 'linear',\n      complete: start\n    });\n    anime({\n      targets: '.ring',\n      scale: {\n        value: [1, 4],\n        duration: 5500\n      },\n      opacity: {\n        value: [1, 0],\n        duration: 1000,\n        easing: 'linear',\n        loop: true\n      },\n      loop: true\n    })\n  }\n\n  return (\n    <div>\n      <div style={{ display: 'flex', flex: 1, flexDirection: 'row', padding: 40 }}>\n        <div style={{ display: 'flex', flex: 0.4, flexDirection: 'column', }}>\n          <div style={{ display: 'flex', justifyContent: 'flex-start', marginBottom: 10 }}>\n            <text style={{ fontSize: 20 }}># Active cases: {activeCases}</text>\n          </div>\n          <div class='border' style={{ border: '3px solid black', width: 390, height: 390, flexWrap: 'wrap', flexDirection: 'row', display: 'flex', justifyContent: 'flex-start', alignItems: 'center', padding: 80 }}>\n            {populationList.map((id) => {\n              if (id < Math.floor(population * infectedPercent / 100)) {\n                return (renderInfected(id))\n              } else {\n                return (renderHealthy(id))\n              }\n            })}\n          </div>\n          <text style={{ marginTop: 10, fontSize: 20 }}>R={rFactor}</text>\n        </div>\n\n        <div style={{ display: 'flex', flex: 0.6, flexDirection: 'column', marginLeft: 50 }}>\n          <Typography id=\"range-slider\" gutterBottom>\n            Population\n          </Typography>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <div style={{ width: 400 }}>\n              <Slider\n                value={population}\n                onChange={(event, value) => setPopulation(value)}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                min={0}\n                max={169}\n                disabled={startDisabled}\n              />\n            </div>\n            <div style={{ marginLeft: 10 }}>\n              <Input\n                value={population}\n                margin=\"dense\"\n                onChange={(event) => (event.target.value) ? setPopulation(event.target.value) : () => { }}\n                onBlur={handleBlur}\n                inputProps={{\n                  step: 1,\n                  min: 0,\n                  max: 169,\n                  type: 'number',\n                  'aria-labelledby': 'input-slider',\n                }}\n              />\n            </div>\n          </div>\n          <Typography id=\"range-slider\" gutterBottom>\n            Infected proportion (%)\n          </Typography>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <div style={{ width: 400 }}>\n              <Slider\n                value={infectedPercent}\n                onChange={(event, value) => setInfectedPercent(value)}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                min={0}\n                max={100}\n                disabled={startDisabled}\n              />\n            </div>\n            <div style={{ marginLeft: 10 }}>\n              <Input\n                value={infectedPercent}\n                margin=\"dense\"\n                onChange={(event) => (event.target.value) ? setInfectedPercent(event.target.value) : () => { }}\n                inputProps={{\n                  step: 1,\n                  min: 0,\n                  max: 100,\n                  type: 'number',\n                  'aria-labelledby': 'input-slider',\n                }}\n              />\n            </div>\n          </div>\n          <Typography id=\"range-slider\" gutterBottom>\n            Contagious Radius (meters)\n          </Typography>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <div style={{ width: 400 }}>\n              <Slider\n                value={contagiousRadius}\n                onChange={(event, value) => setContagiousRadius(value)}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                min={0}\n                step={0.2}\n                max={5}\n                disabled={startDisabled}\n              />\n            </div>\n            <div style={{ marginLeft: 10 }}>\n              <Input\n                value={contagiousRadius}\n                margin=\"dense\"\n                onChange={(event) => (event.target.value) ? setContagiousRadius(event.target.value) : () => { }}\n                inputProps={{\n                  step: 0.1,\n                  min: 0,\n                  max: 5,\n                  type: 'number',\n                  'aria-labelledby': 'input-slider',\n                }}\n              />\n            </div>\n          </div>\n          <Typography id=\"range-slider\" gutterBottom>\n            Susceptible Rate (%)\n          </Typography>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <div style={{ width: 400 }}>\n              <Slider\n                value={susceptibleRate}\n                onChange={(event, value) => setSusceptibleRate(value)}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                min={0}\n                max={100}\n                disabled={startDisabled}\n              />\n            </div>\n            <div style={{ marginLeft: 10 }}>\n              <Input\n                value={susceptibleRate}\n                margin=\"dense\"\n                onChange={(event) => (event.target.value) ? setSusceptibleRate(event.target.value) : () => { }}\n                inputProps={{\n                  step: 1,\n                  min: 0,\n                  max: 100,\n                  type: 'number',\n                  'aria-labelledby': 'input-slider',\n                }}\n              />\n            </div>\n          </div>\n          Options:\n          <div style={{ display: 'flex', flexDirection: 'row', }}>\n            <div style={{ margin: 20 }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ width: 100 }}\n                onClick={() => shuffle()}\n                disabled={shuffleDisabled}\n              >\n                Shuffle\n              </Button>\n            </div>\n          </div>\n          <div style={{ display: 'flex', flexDirection: 'row', }}>\n            <div style={{ margin: 20 }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ width: 100 }}\n                onClick={() => {\n                  setStartDisabled(true)\n                  setShuffleDisabled(true)\n                  setGroupDisabled(true)\n                  setResetDisabled(false)\n                  setPauseDisabled(false)\n                  start()\n                }}\n                disabled={startDisabled}\n              >\n                Start\n              </Button>\n            </div>\n            <div style={{ margin: 20 }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ width: 100 }}\n                onClick={() => {\n                  anime.remove('.population')\n                  setStartDisabled(false)\n                  setShuffleDisabled(false)\n                  setGroupDisabled(false)\n                  setPauseDisabled(true)\n                }}\n                disabled={pauseDisabled}\n              >\n                Pause\n              </Button>\n            </div>\n            <div style={{ margin: 20 }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ width: 100 }}\n                disabled={startDisabled}\n                onClick={() => {\n\n                }}\n              >\n                Reset\n              </Button>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}